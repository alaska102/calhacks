import {
  Client
} from "./chunk-6PWLZAMS.js";
import {
  __async
} from "./chunk-WIFMLPT5.js";

// src/voices/index.ts
var Voices = class extends Client {
  list() {
    return __async(this, null, function* () {
      const response = yield this._fetch("/voices");
      return response.json();
    });
  }
  get(voiceId) {
    return __async(this, null, function* () {
      const response = yield this._fetch(`/voices/${voiceId}`);
      return response.json();
    });
  }
  create(voice) {
    return __async(this, null, function* () {
      const response = yield this._fetch("/voices", {
        method: "POST",
        body: JSON.stringify(voice)
      });
      return response.json();
    });
  }
  update(id, voice) {
    return __async(this, null, function* () {
      const response = yield this._fetch(`/voices/${id}`, {
        method: "PATCH",
        body: JSON.stringify(voice)
      });
      return response.json();
    });
  }
  clone(options) {
    return __async(this, null, function* () {
      if (options.mode === "clip") {
        const formData = new FormData();
        formData.append("clip", options.clip);
        if (options.enhance !== void 0) {
          formData.append("enhance", options.enhance.toString());
        }
        const response = yield this._fetch("/voices/clone/clip", {
          method: "POST",
          body: formData
        });
        return response.json();
      }
      throw new Error("Invalid mode for clone()");
    });
  }
  mix(options) {
    return __async(this, null, function* () {
      const response = yield this._fetch("/voices/mix", {
        method: "POST",
        body: JSON.stringify(options)
      });
      return response.json();
    });
  }
  localize(options) {
    return __async(this, null, function* () {
      const response = yield this._fetch("/voices/localize", {
        method: "POST",
        body: JSON.stringify(options)
      });
      return response.json();
    });
  }
};

export {
  Voices
};
